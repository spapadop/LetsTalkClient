package se.bth.swatkats.letstalk.gui;

import java.awt.Toolkit;
import java.util.ArrayList;
import se.bth.swatkats.letstalk.connection.GuiHandler;
import se.bth.swatkats.letstalk.user.User;

/**
 * This class provides the window which lets the users to block and unblock
 * others users from the local address book.
 * 
 * @author Sokratis and David Alarcon.
 */
public class BlockUnblockUser extends javax.swing.JFrame {
    
    ArrayList<User> contacts; //users in local address book
    
    /**
     * Creates new form BlockUnblockUser.
     */
    public BlockUnblockUser() {
        initComponents();
        myInitComponents();
    }

    /**
     * Provides modifications written by us.
     */
    private void myInitComponents(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("img/iconHead.png")));
//        System.out.println("take the local users!");
        contacts = GuiHandler.getInstance().searchLocalUsers(GuiHandler.getInstance().getUser().getId(), null);
//        System.out.println("took the local users!");
        selectUserToBlock.setModel(new javax.swing.DefaultComboBoxModel(putNames()));
        
        updateBlockedUsers();
    }
    
    /**
     * This method updates the list of blocked users.
     */
    private void updateBlockedUsers(){
//        System.out.println("updating blocked users");
        selectUserToUnblock.setModel(new javax.swing.DefaultComboBoxModel(putBlocked()));
    }
    
    /**
     * This method gets the users from the local address book.
     * 
     * @return temp - This String[] contains all the users of the local address book.
     */
    private String[] putNames(){
        contacts = GuiHandler.getInstance().searchLocalUsers(GuiHandler.getInstance().getUser().getId(), null);
        
        String[] temp = new String[contacts.size()];
        int pos=0;
        for(User u: contacts){
            temp[pos++] = u.getUsername() + " - " + u.getEmail();
//            System.out.println(u.getUsername() + " - " + u.getEmail());
        }
        
        return temp;
    }
    
    /**
     * This method gets the users from the local address book.
     * 
     * @return temp - This String[] contains all the users of the local address book.
     */
    private String[] putBlocked(){
        ArrayList<User> blocked = GuiHandler.getInstance().fetchBlockedUsers(GuiHandler.getInstance().getUser().getId());
//        System.out.println("size of blocked : " + blocked.size());
        String[] temp = new String[blocked.size()];
        int pos=0;
        for(User u: blocked){
            temp[pos++] = u.getUsername() + " - " + u.getEmail();
//            System.out.println(u.getUsername() + " - " + u.getEmail());
        }
        
        return temp;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        blockUnblockUserLabel = new javax.swing.JLabel();
        addDeleteUserIcon = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        blockUserImg = new javax.swing.JLabel();
        unblockUserImg = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        selectUserToUnblock = new javax.swing.JComboBox();
        performBlockUserButton = new javax.swing.JButton();
        performUnblockUserButton = new javax.swing.JButton();
        okayButton = new javax.swing.JButton();
        selectUserToBlock = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(247, 247, 247));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(247, 247, 247));

        blockUnblockUserLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        blockUnblockUserLabel.setText("Block / Unblock User");

        addDeleteUserIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/se/bth/swatkats/letstalk/gui/img/usertype.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(237, 237, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        blockUserImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/se/bth/swatkats/letstalk/gui/img/block.png"))); // NOI18N
        blockUserImg.setText("block user");

        unblockUserImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/se/bth/swatkats/letstalk/gui/img/unblock.png"))); // NOI18N
        unblockUserImg.setText("unblock user");

        cancelButton.setText("Close");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        performBlockUserButton.setText("Perform");
        performBlockUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                performBlockUserButtonActionPerformed(evt);
            }
        });

        performUnblockUserButton.setText("Perform");
        performUnblockUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                performUnblockUserButtonActionPerformed(evt);
            }
        });

        okayButton.setText("Okay");
        okayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(unblockUserImg)
                    .addComponent(blockUserImg))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(selectUserToUnblock, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectUserToBlock, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(performBlockUserButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(performUnblockUserButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blockUserImg)
                    .addComponent(performBlockUserButton)
                    .addComponent(selectUserToBlock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectUserToUnblock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unblockUserImg)
                    .addComponent(performUnblockUserButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okayButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(addDeleteUserIcon)
                .addGap(33, 33, 33)
                .addComponent(blockUnblockUserLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addDeleteUserIcon, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(blockUnblockUserLabel)
                        .addGap(29, 29, 29)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * When the user presses this button, the window is closed.
     * 
     * @param evt - event.
     */
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

   
    /**
     * When the user presses this button, the action (block user) is 
     * performed.
     * 
     * @param evt - event.
     */
    private void performBlockUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_performBlockUserButtonActionPerformed
        String selectedUserName = selectUserToBlock.getSelectedItem().toString();
//        System.out.println("selected thing is  " + selectedUserName);
        for(User u : contacts){
            if (selectedUserName.equals(u.getUsername() + " - " + u.getEmail())){
//                System.out.println(selectedUserName + " = " + u.getUsername() + " - " + u.getEmail());
//            	System.out.println("user " + GuiHandler.getInstance().getUser().getId() + " blocked " + u.getId());
                GuiHandler.getInstance().blockUserFromLocalBook(GuiHandler.getInstance().getUser().getId(), u.getId());
                break;
            }
        }
        updateBlockedUsers();
    }//GEN-LAST:event_performBlockUserButtonActionPerformed
    
    /**
     * When the user presses this button, the action (unblock user) is 
     * performed.
     * 
     * @param evt - event.
     */
    private void performUnblockUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_performUnblockUserButtonActionPerformed
        String selectedUserName = selectUserToUnblock.getSelectedItem().toString();
        
        //waiting for a function to get blocked users
        ArrayList<User> toUnblock = GuiHandler.getInstance().fetchBlockedUsers(GuiHandler.getInstance().getUser().getId());
        for(User u : toUnblock){
            if (selectedUserName.equals(u.getUsername() + " - " +u.getEmail())){
                GuiHandler.getInstance().unblockUserFromLocalBook(GuiHandler.getInstance().getUser().getId(), u.getId());
                break;
            }
        }
    }//GEN-LAST:event_performUnblockUserButtonActionPerformed

    /**
     * This button close the window.
     * 
     * @param evt - event 
     */
    private void okayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okayButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_okayButtonActionPerformed

    /**
     * Main method which starts the class.
     * 
     * @param args the command line arguments.
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlockUnblockUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlockUnblockUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlockUnblockUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlockUnblockUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlockUnblockUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addDeleteUserIcon;
    private javax.swing.JLabel blockUnblockUserLabel;
    private javax.swing.JLabel blockUserImg;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton okayButton;
    private javax.swing.JButton performBlockUserButton;
    private javax.swing.JButton performUnblockUserButton;
    private javax.swing.JComboBox selectUserToBlock;
    private javax.swing.JComboBox selectUserToUnblock;
    private javax.swing.JLabel unblockUserImg;
    // End of variables declaration//GEN-END:variables
}
